version: '3.8'

services:
  web:
    build: .
    command: gunicorn crm_project.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 4
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      - CONTAINER_ROLE=web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build: .
    command: celery -A crm_project worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - db
      - redis
    environment:
      - CONTAINER_ROLE=worker
    healthcheck:
      test: ["CMD", "celery", "-A", "crm_project", "inspect", "ping", "-d", "celery@worker"]
      interval: 30s
      timeout: 10s
      retries: 3

  beat:
    build: .
    command: celery -A crm_project beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - db
      - redis
    environment:
      - CONTAINER_ROLE=beat
    healthcheck:
      test: ["CMD", "celery", "-A", "crm_project", "inspect", "ping", "-d", "celery@beat"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    driver: bridge